name: iOS CI (TestFlight)
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  simulator:
    name: Build iOS Simulator app (no signing)
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - name: Locate Xcode project/workspace
        run: |
          set -e
          FILE=$(find . -maxdepth 4 -type f \( -name "*.xcworkspace" -o -name "*.xcodeproj" \) | head -n1)
          if [ -z "$FILE" ]; then
            echo "No Xcode project/workspace found. Generating via Xcodegen..."
            brew install xcodegen || true
            cd ios && xcodegen generate
            FILE=$(find . -maxdepth 2 -type f \( -name "*.xcworkspace" -o -name "*.xcodeproj" \) | head -n1)
            [ -z "$FILE" ] && { echo "Xcodegen did not produce a project" >&2; exit 1; }
            DIR=$(dirname "$FILE"); echo "WORKING_DIR=$(pwd)/$DIR" >> $GITHUB_ENV
          else
            DIR=$(dirname "$FILE"); echo "WORKING_DIR=$DIR" >> $GITHUB_ENV
          fi
      - name: Install Fastlane
        run: |
          gem install fastlane --no-document
          gem install xcpretty --no-document
      - name: CocoaPods install (if Podfile exists)
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          if [ -f "Podfile" ]; then
            sudo gem install cocoapods --no-document || brew install cocoapods
            pod install --repo-update
          fi
      - name: Build simulator .app
        working-directory: ${{ env.WORKING_DIR }}
        run: fastlane sim
      - name: Upload simulator artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-simulator-app
          path: simulator_app.zip

  testflight:
    name: TestFlight upload
    needs: simulator
    if: ${{ secrets.SIGNING_CERT_P12 && secrets.SIGNING_CERT_PASSWORD && secrets.PROVISIONING_PROFILE }}
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - name: Locate Xcode project/workspace
        run: |
          set -e
          FILE=$(find . -maxdepth 4 -type f \( -name "*.xcworkspace" -o -name "*.xcodeproj" \) | head -n1)
          if [ -z "$FILE" ]; then
            echo "No Xcode project/workspace found. Generating via Xcodegen..."
            brew install xcodegen || true
            cd ios && xcodegen generate
            FILE=$(find . -maxdepth 2 -type f \( -name "*.xcworkspace" -o -name "*.xcodeproj" \) | head -n1)
            [ -z "$FILE" ] && { echo "Xcodegen did not produce a project" >&2; exit 1; }
            DIR=$(dirname "$FILE"); echo "WORKING_DIR=$(pwd)/$DIR" >> $GITHUB_ENV
          else
            DIR=$(dirname "$FILE"); echo "WORKING_DIR=$DIR" >> $GITHUB_ENV
          fi
      - name: Install Fastlane
        run: |
          gem install fastlane --no-document
          gem install xcpretty --no-document
      - name: CocoaPods install (if Podfile exists)
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          if [ -f "Podfile" ]; then
            sudo gem install cocoapods --no-document || brew install cocoapods
            pod install --repo-update
          fi
      - name: Import code signing assets
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.SIGNING_CERT_P12 }}
          p12-password: ${{ secrets.SIGNING_CERT_PASSWORD }}
          profile-base64: ${{ secrets.PROVISIONING_PROFILE }}
      - name: Build and upload to TestFlight
        env:
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_API_KEY_P8: ${{ secrets.ASC_API_KEY_P8 }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
          BUNDLE_ID: ${{ secrets.BUNDLE_ID }}
          SCHEME: ${{ secrets.SCHEME }}
          WORKSPACE: ${{ secrets.WORKSPACE }}
        working-directory: ${{ env.WORKING_DIR }}
        run: fastlane ci
      - name: Upload ipa artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: |
            ./build/**/*.ipa
            ./*.ipa
